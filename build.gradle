buildscript {
    repositories {
        mavenLocal()
        maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        maven { url 'https://jitpack.io' }
        //jcenter()
        google()
    }

    dependencies {
        classpath "net.sf.proguard:proguard-gradle:$proguardVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}


apply plugin: 'kotlin'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

group 'com.github.rwsbillyang'
version "$fileProxyVersion"
//mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

sourceCompatibility = "$jdkVersion"
targetCompatibility = "$jdkVersion"

compileKotlin {
    kotlinOptions.jvmTarget = "$jdkVersion"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$jdkVersion"
}


repositories {
    mavenLocal()
    mavenCentral()
    //jcenter()
    google()
}


dependencies {
    //implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation("io.ktor:ktor-server-netty:$ktor_version")
    implementation("ch.qos.logback:logback-classic:$logback_version")
    testImplementation("io.ktor:ktor-server-tests:$ktor_version")

    implementation ("io.ktor:ktor-client-core:$ktor_version")
    implementation ("io.ktor:ktor-client-core-jvm:$ktor_version")
    //implementation ("io.ktor:ktor-client-apache:$ktor_version")
    implementation "io.ktor:ktor-client-cio-jvm:$ktor_version"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}